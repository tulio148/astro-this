---
interface Props {
  title: string;
  subtitle: string;
  backgroundImage?: string;
}

const {
  title,
  subtitle,
  backgroundImage = "/images/dance-hero.jpg",
} = Astro.props;
---

<div class="relative min-h-screen flex items-end overflow-hidden">
  <!-- Background Image for LCP -->
  <img
    src={backgroundImage}
    alt=""
    class="absolute inset-0 w-full h-full object-cover z-0 scale-105 animate-slow-zoom"
    loading="eager"
    fetchpriority="high"
  />

  <div
    class="container pb-[60px] md:pb-[100px] mx-auto px-6 sm:px-10 lg:px-16 relative z-20"
  >
    <div class="max-w-3xl transform animate-fade-in">
      <div
        class="bg-gradient-to-t from-db-pink rounded-3xl border-l-2 border-b-2 border-white/20 px-4 pt-4 overflow-hidden"
      >
        <h1
          class="text-6xl md:text-7xl font-semibold tracking-wider text-white mb-2 text-balance hero-title"
        >
          {title}
        </h1>
        <p
          class="text-xl md:text-2xl pb-4 max-w-fit font-light text-white tracking-wider hero-subtitle leading-tight"
        >
          {subtitle}
        </p>
      </div>
    </div>
  </div>
</div>

<style>
  .animate-fade-in {
    animation: fadeIn 1.5s ease-in forwards;
    animation-delay: 0.3s;
  }

  .animate-slow-zoom {
    animation: slowZoom 15s ease-out forwards;
  }

  .hero-title {
    text-shadow: 4px 4px 8px rgba(0, 0, 0, 0.3);
  }

  .hero-subtitle {
    text-shadow: 4px 4px 8px rgba(0, 0, 0, 0.2);
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes slowZoom {
    from {
      transform: scale(1.1);
    }
    to {
      transform: scale(1);
    }
  }
</style>
