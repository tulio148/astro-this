---
interface Props {
  class?: string;
}

const { class: className = "" } = Astro.props;
---

<div
  class={`flex flex-col justify-center items-center card-animate opacity-0 transform translate-y-8 ${className}`}
>
  <div
    class="w-full px-6 py-10 sm:p-10 border-2 border-db-pink/20 bg-gradient-to-br from-white to-db-pink/20 shadow-lg shadow-db-pink/10 rounded-3xl hover:shadow-2xl hover:shadow-db-pink/15 transition-all duration-300"
  >
    <div class="relative z-10">
      <slot />
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const cards = document.querySelectorAll(".card-animate");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry, index) => {
          if (entry.isIntersecting) {
            setTimeout(() => {
              entry.target.classList.add(
                "opacity-100",
                "translate-y-0",
                "transition-all",
                "duration-700",
                "ease-out"
              );
            }, index * 100);
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.1 }
    );

    cards.forEach((card) => {
      observer.observe(card);
    });
  });
</script>
