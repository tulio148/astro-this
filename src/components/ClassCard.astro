---
import { Image } from "astro:assets";
interface Props {
  title: string;
  day: string;
  time: string;
  instructor: string;
  level: string;
  spots?: number;
}

const { title, day, time, instructor, level, spots } = Astro.props;
---

<div class="class-card opacity-0 transform translate-y-8">
  <div
    class="relative overflow-hidden rounded-2xl border-2 border-db-pink/20 bg-white shadow-md group"
  >
    <!-- Decorative elements -->
    <div
      class="absolute -right-10 -top-10 w-32 h-32 bg-db-light-pink/10 rounded-full"
    >
    </div>
    <div
      class="absolute -left-8 -bottom-8 w-24 h-24 bg-db-green/10 rounded-full"
    >
    </div>

    <div class="relative z-10 p-6">
      <div class="mb-4">
        <h3 class="text-xl font-bold text-db-pink mb-2">{title}</h3>
        <div
          class="h-0.5 w-24 bg-gradient-to-r from-db-pink to-transparent rounded-full"
        >
        </div>
      </div>

      <ul class="space-y-2 mb-6">
        <li class="flex items-start">
          <span class="text-db-pink font-medium w-28">Day:</span>
          <span>{day}</span>
        </li>
        <li class="flex items-start">
          <span class="text-db-pink font-medium w-28">Time:</span>
          <span>{time}</span>
        </li>
        <li class="flex items-start">
          <span class="text-db-pink font-medium w-28">Instructor:</span>
          <span>{instructor}</span>
        </li>
        <li class="flex items-start">
          <span class="text-db-pink font-medium w-28">Level:</span>
          <span>{level}</span>
        </li>
        {
          spots && (
            <li class="flex items-start">
              <span class="text-db-pink font-medium w-28">Spots left:</span>
              <span>{spots}</span>
            </li>
          )
        }
      </ul>

      <a
        href="/classes"
        class="inline-block px-6 py-2 bg-gradient-to-r from-db-pink to-db-light-pink text-white font-medium rounded-xl shadow-md hover:shadow-lg transform group-hover:translate-y-1 transition-all duration-300"
      >
        Book Now
      </a>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const cards = document.querySelectorAll(".class-card");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry, index) => {
          if (entry.isIntersecting) {
            setTimeout(() => {
              entry.target.classList.add(
                "opacity-100",
                "translate-y-0",
                "transition-all",
                "duration-700",
                "ease-out"
              );
            }, index * 150);
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.1 }
    );

    cards.forEach((card) => {
      observer.observe(card);
    });
  });
</script>
